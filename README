EMRPC is a EventMachine-based remote procedure call library.
It looks like DRb, but is much more efficient and provides
asynchronous interface along with blocking synchronous interface. 

Author: Oleg Andreev <oleganza@gmail.com>

HELLO WORLD

  class HelloWorld
    def action
      "Hello!"
    end
  end
    
  server = EMRPC::Server.new(:host => '0.0.0.0', 
                             :port => 9000, 
                             :object => HelloWorld.new)
  
  EM::run do
    server.run
  end
  
  client = EMRPC::Client.new(:host => "localhost", :port => 9000)
  client.action == "Hello!" #=> true



BLOCKING API

  API consists of the several proxy layers. 
  Each layer relies on #send(math, *args, &blk) method.
  When the #send call is done, current thread is blocked 
  until backend responds or timeout exception is raised.
  
  MultithreadedClient implements abstract connections pooling 
  mechanism.

ASYNCHRONOUS API
  
  Async API uses #send method to send messages and a reposnder object
  responding to #on_return(result) and #on_raise(exception), which
  are called when result is ready or exception was raised.
  
  
  
THE MIT LICENSE

Copyright (c) 2008, Oleg Andreev <oleganza@gmail.com>

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
